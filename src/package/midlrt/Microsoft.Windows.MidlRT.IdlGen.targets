<!--
***********************************************************************************************
Copyright (C) Microsoft Corporation.
***********************************************************************************************
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
    This file contains targets for generating IDL files from winmd references. These are only
    used when the consumer hasn't switched to Modern IDL.
  -->

  <!-- Write a file to disk to keep track of the files that have been generated -->
  <PropertyGroup>
    <_MidlRTIdlGenTrackerFile>$(IntermediateOutputPath)MidlRT-GeneratedIdlFiles.txt</_MidlRTIdlGenTrackerFile>
    <CleanDependsOn>
      $(CleanDependsOn);MidlRTIdlGenClean
    </CleanDependsOn>
  </PropertyGroup>

  <Target Name="MidlRTIdlGenClean">
    <ReadLinesFromFile File="$(_MidlRTIdlGenTrackerFile)" >
      <Output TaskParameter="Lines" ItemName="_IdlToDelete"/>
    </ReadLinesFromFile>

    <ItemGroup>
      <_FilesToDelete Remove="@(_FilesToDelete)"/>
      <_FilesToDelete Include="$(_MidlRTIdlGenTrackerFile)"/>
      <_FilesToDelete Include="$(_IdlToDelete)"/>
    </ItemGroup>

    <Delete Files="@(_FilesToDelete)"/>
  </Target>

  <!--
    If not using the newer modern idl semantics, generate the .idl for any referenced winmd files.
    We need a special target here, because the other Get*References  depends on ResolveReferences
    being run first. However, MIDL runs before ResolveReferences, so this target uses the References
    item, not the ReferencePath item.
  -->
  <Target Name="GetMidlRTDirectWinMDReferencesForIdl"
          BeforeTargets="Midl"
          Returns="@(MidlRTDirectWinMDReferencesForIdl);@(MidlRTDirectWinMDReferenceDirs)">
    <ItemGroup>
      <_MidlRTDirectWinMDReferencesForIdl Remove="@(_MidlRTDirectWinMDReferencesForIdl)" />
      <_MidlRTDirectWinMDReferencesForIdl Include="@(Reference)" Condition="'%(Reference.Extension)' == '.winmd' and '%(Reference.IsSystemReference)' != 'true'" />
      <MidlRTDirectWinMDReferencesForIdl Remove="@(MidlRTDirectWinMDReferencesForIdl)"/>
      <MidlRTDirectWinMDReferencesForIdl Include="@(_MidlRTDirectWinMDReferencesForIdl)">
        <WinMDPath>%(FullPath)</WinMDPath>
      </MidlRTDirectWinMDReferencesForIdl>

      <!-- Generate list of reference directories to pass into winmdidl.exe -->
      <_MidlRTDirectWinMDReferenceDirs Include="@(MidlRTDirectWinMDReferencesForIdl->'%(RootDir)%(Directory)')"/>
    </ItemGroup>

    <!-- Remove any duplicates of file paths (caused by a nuget containing mulitple .winmd files) -->
    <RemoveDuplicates Inputs="@(_MidlRTDirectWinMDReferenceDirs)">
      <Output TaskParameter="Filtered" ItemName="MidlRTDirectWinMDReferenceDirs"/>
    </RemoveDuplicates>
    <Message Text="MidlRTDirectWinMDReferencesForIdl: @(MidlRTDirectWinMDReferencesForIdl->'%(WinMDPath)')" Importance="$(MidlRTVerbosity)"/>
  </Target>

  <Target Name="_GatherExpectedGeneratedFiles"
          Condition="'@(MidlRTDirectWinMDReferencesForIdl)' != ''"
          BeforeTargets="MidlRTMakeReferenceIdl"
          Returns="@(_ExpectedGeneratedIdl)">
    <ReadLinesFromFile File="$(_MidlRTIdlGenTrackerFile)" >
      <Output TaskParameter="Lines" ItemName="_ExpectedGeneratedIdl"/>
    </ReadLinesFromFile>

    <!-- If no files were read, then we haven't run this target before, so include a fake so the MidlRTMakeReferenceIdl target will execute -->
     <ItemGroup Condition="'@(_ExpectedGeneratedIdl)'==''">
      <_ExpectedGeneratedIdl Include="fake.idl"/>
    </ItemGroup>
  </Target>

  <!--Build reference IDL from WinMD project references and dynamic library project references
      Note that Condition is evaluated before DependsOnTargets are run -->
  <Target Name="MidlRTMakeReferenceIdl"
          Condition="'@(MidlRTDirectWinMDReferencesForIdl)' != ''"
          AfterTargets="GetMidlRTDirectWinMDReferencesForIdl"
          Inputs="@(MidlRTDirectWinMDReferencesForIdl)"
          Outputs="@(_ExpectedGeneratedIdl)">
    <PropertyGroup>
      <WindowsSdkToolLocation Condition="'$(WindowsSdkToolLocation)'==''">$(WindowsSdkDir)bin\$(TargetPlatformVersion)\$(PreferredToolArchitecture)</WindowsSdkToolLocation>
    </PropertyGroup>
    <ItemGroup>
      <_MidlRTRefInputs Remove="@(_MidlRTRefInputs)"/>
      <_MidlRTRefInputs Include="@(MidlRTDirectWinMDReferencesForIdl)"/>

      <_MidlRTMetadataDirInputs Include="$(WindowsSDK_UnionMetadataPath)"/>
      <_MidlRTMetadataDirInputs Include="@(MidlRTDirectWinMDReferenceDirs)"/>
    </ItemGroup>

    <!-- Since the backslash is an escape character, we need to append a '.' to the end of each path so that they are properly formed -->
    <PropertyGroup>
      <_MidlRTWinmdIdlParams>/outdir:&quot;$(GeneratedFilesDir).&quot;</_MidlRTWinmdIdlParams>
      <_MidlRTWinmdIdlParams>$(_MidlRTWinmdIdlParams) @(_MidlRTMetadataDirInputs->'/metadata_dir:&quot;%(Identity).&quot;', ' ')</_MidlRTWinmdIdlParams>
    </PropertyGroup>

    <MakeDir Directories="$(GeneratedFilesDir)" />
    <Exec Command="&quot;$(WindowsSdkToolLocation)\winmdidl.exe&quot; $(_MidlRTWinmdIdlParams) %(_MidlRTRefInputs.Identity)"
          Condition="'@(_MidlRTRefInputs)' != ''"/>

    <ItemGroup>
      <_ActualGeneratedFiles Include="$(GeneratedFilesDir)\*.idl"/>
    </ItemGroup>
    <WriteLinesToFile File="$(_MidlRTIdlGenTrackerFile)" Lines="@(_ActualGeneratedFiles)" />
  </Target>

  <ItemDefinitionGroup>
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories);$(GeneratedFilesDir)</AdditionalIncludeDirectories>
    </Midl>
  </ItemDefinitionGroup>
</Project>